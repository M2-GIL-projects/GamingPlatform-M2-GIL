@model GamingPlatform.Models.PetitBacGame

<div class="container mt-4">
    <h1>Configuration de la Partie : Petit Bac</h1>

    <form method="post" asp-action="ConfigureGame">
        <input type="hidden" name="LobbyId" value="@Model.LobbyId" />

        <!-- Sélection de la Lettre -->
        <div class="mb-3">
            <label for="Letter" class="form-label">Lettre</label>
            <select class="form-select" id="Letter" name="Letter" required>
                @foreach (var letter in "ABCDEFGHIJKLMNOPQRSTUVWXYZ")
                {
                    <option value="@letter" selected="@(Model.Letter == letter)">@letter</option>
                }
            </select>
        </div>

        <!-- Sélection des Catégories -->
        <div class="mb-3">
            <label class="form-label">Sélectionnez les Catégories :</label>
            <div class="categories-container">
                @{
                    int itemsPerColumn = 5;
                    int totalItems = Model.AvailableCategories.Count;
                    int totalColumns = (int)Math.Ceiling((double)totalItems / itemsPerColumn);

                    for (int columnIndex = 0; columnIndex < totalColumns; columnIndex++)
                    {
                        <div class="categories-column">
                            @for (int i = columnIndex * itemsPerColumn; i < (columnIndex + 1) * itemsPerColumn && i < totalItems; i++)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="@Model.AvailableCategories[i]" name="SelectedCategories" value="@Model.AvailableCategories[i]" />
                                    <label class="form-check-label" for="@Model.AvailableCategories[i]">@Model.AvailableCategories[i]</label>
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Condition d'Arrêt -->
        <div class="mb-3">
            <label for="EndCondition" class="form-label">Condition d'Arrêt</label>
            <select class="form-select" id="EndCondition" name="EndCondition" required>
                <option value="TimeLimit" selected="@Model.EndCondition == "TimeLimit"">Limite de Temps</option>
                <option value="AllPlayersDone" selected="@Model.EndCondition == "AllPlayersDone"">Lorsque tous les joueurs ont terminé</option>
            </select>
        </div>

        <!-- Temps Limite -->
        <div class="mb-3" id="TimeLimitSection" style="display: @(Model.EndCondition == "TimeLimit" ? "block" : "none");">
            <label for="TimeLimit" class="form-label">Temps Limite (en secondes)</label>
            <input type="number" class="form-control" id="TimeLimit" name="TimeLimit" value="@Model.TimeLimit" min="1" />
        </div>

        <!-- Bouton de soumission -->
        <button type="submit" class="btn btn-primary">Lancer la Partie</button>
    </form>
</div>

@section Scripts {
    <script>
        const endConditionDropdown = document.getElementById('EndCondition');
        const timeLimitSection = document.getElementById('TimeLimitSection');

        endConditionDropdown.addEventListener('change', () => {
            if (endConditionDropdown.value === 'TimeLimit') {
                timeLimitSection.style.display = 'block';
            } else {
                timeLimitSection.style.display = 'none';
            }
        });
    </script>

    <style>
        .categories-container {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
        }

        .categories-column {
            display: flex;
            flex-direction: column;
        }

        .form-check {
            margin-bottom: 10px;
        }
    </style>
}
