<meta charset="utf-8">
<title>Création de Labyrinthe</title>
<link rel="stylesheet" href="~/css/labyrinth/labyrinth.css" asp-append-version="true" />

<body class="bg-light">
    <!-- Conteneur principal -->
    <div class="container text-center d-flex vh-100 align-items-center justify-content-center">
        <button id="generateLabyrinthButton" class="btn btn-primary btn-lg">Générer le Labyrinthe du lobby</button>
    </div>

    <!-- Spinner de chargement -->
    <div id="loadingSpinner" class="d-flex flex-column align-items-center justify-content-center vh-100">
        <div class="spinner"></div>
        <p id="spinnerMessage" class="mt-3 text-primary">Initialisation...</p>
    </div>

    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/labyrinth/labyrinthgenerator.js"></script>
    <script>
        // Établir la connexion SignalR
        var connection = new signalR.HubConnectionBuilder().withUrl("/labyrinthHub").build();

        // Démarrer la connexion SignalR
        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

        const lobbyId = "@ViewBag.lobbyId";
        const player1 = "@ViewBag.player1";
        const player2 = "@ViewBag.player2";

        // Fonction pour afficher/masquer le spinner
        function toggleSpinner(show) {
            document.getElementById("loadingSpinner").style.display = show ? "flex" : "none";
        }

        // Fonction pour générer et envoyer le labyrinthe
function generateAndSendLabyrinth() {
    const nRows = 25;
    const nCols = 25;

    try {
        // Modifier le message du spinner
        toggleSpinner(true, "Création du labyrinthe en cours...");

        // Générer le labyrinthe
        const labyrinth = labyrinthgenerator(nRows, nCols);

        // Convertir le labyrinthe en JSON
        const labyrinthJson = JSON.stringify(labyrinth);

        // Envoyer le labyrinthe au serveur
        connection.invoke("SaveLabyrinth", lobbyId, player1, player2, labyrinthJson)
            .then(() => {
                toggleSpinner(true, "Enregistrement du labyrinthe...");

                // Réception du message "LabyrinthSaved" depuis le serveur
                connection.on("LabyrinthSaved", function (message) {
                    toggleSpinner(false); // Masquer le spinner une fois le labyrinthe créé
                    alert(message);
                    window.location.href = `/Game/LAB/Play/${lobbyId}`;
                });
            })
            .catch(function (err) {
                toggleSpinner(false); // Masquer le spinner en cas d'erreur
                console.error(err.toString());
            });
    } catch (error) {
        toggleSpinner(false); // Masquer le spinner si une erreur se produit
        console.error("Erreur lors de la génération du labyrinthe :", error);
    }
}
        }

        // Ajouter un écouteur d'événements au bouton
        document.getElementById("generateLabyrinthButton").addEventListener("click", generateAndSendLabyrinth);
    </script>
</body>
