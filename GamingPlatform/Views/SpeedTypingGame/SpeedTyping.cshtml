@{
    ViewData["Title"] = "Speed Typing - Partie";
}

<div class="container mt-4">
    <h2>Jeu de Speed Typing</h2>
    <p>Entrez le texte affiché aussi rapidement que possible pour gagner !</p>

    <div class="row">
        <!-- Section de progression des joueurs -->
        <div class="col-md-4">
            <h5>Joueurs dans le lobby</h5>
            <ul id="playerList" class="list-group">
                <!-- Liste des joueurs actualisée par SignalR ou AJAX -->
            </ul>
        </div>

        <!-- Section de jeu -->
        <div class="col-md-8">
            <h5 id="textToType">Texte à taper : </h5>
            <input type="text" id="userInput" class="form-control mb-3" placeholder="Commencez à taper..." />

            <!-- Affichage de la progression pour chaque joueur -->
            <div id="progressDisplay">
                <!-- Exemples de barre de progression -->
                <div class="progress my-2">
                    <div id="player1Progress" class="progress-bar bg-success" style="width: 0%;" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">Joueur 1</div>
                </div>
                <div class="progress my-2">
                    <div id="player2Progress" class="progress-bar bg-info" style="width: 0%;" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">Joueur 2</div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Script pour gérer la connexion SignalR et le jeu en temps réel -->
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
    const lobbyCode = "@ViewBag.LobbyCode";  // Récupérer le code du lobby depuis le contrôleur
    const playerName = "@ViewBag.PlayerName";  // Pseudo du joueur

    // Initialiser la connexion SignalR
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/SpeedTypingGameHub")
        .build();

    connection.on("ReceiveProgress", (playerId, progress) => {
        document.getElementById(`player${playerId}Progress`).style.width = `${progress}%`;
    });

    connection.on("PlayerJoined", (player) => {
        // Ajouter le nouveau joueur à la liste
        const playerList = document.getElementById('playerList');
        playerList.innerHTML += `<li class="list-group-item">${player.username}</li>`;
    });

    connection.on("ReceiveTextToType", (text) => {
        document.getElementById('textToType').textContent = `Texte à taper : ${text}`;
    });

    connection.start()
        .then(() => {
            // Informer le serveur de la jonction du joueur
            connection.invoke("JoinGame", lobbyCode, playerName);
        })
        .catch(err => console.error(err.toString()));

    // Suivre la progression du joueur
    document.getElementById("userInput").addEventListener("input", (e) => {
        const textToType = document.getElementById("textToType").textContent.replace("Texte à taper : ", "");
        const userInput = e.target.value;
        const progress = (userInput.length / textToType.length) * 100;

        // Envoyer la progression au serveur
        connection.invoke("UpdateProgress", lobbyCode, playerName, progress);

        if (userInput === textToType) {
            alert("Bravo, vous avez terminé !");
            // Réinitialiser le champ de saisie pour rejouer
            e.target.value = "";
        }
    });
</script>

